//
//  WeatherDataDisplayViewController.swift
//  WeatherApp
//
//  Created by Kinjal Solanki on 22/03/19.
//  Copyright (c) 2019 Kinjal Solanki. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol WeatherDataDisplayProtocol: class {
    func displayAlert(strTitle : String, strMessage : String)
    func displayResponse(mdlResponse : [ResponseModel])
}

enum WeatherCategory : String {
    case rainfall_England = "/Rainfall-England.json"
    case minimumtemp_England = "/Tmin-England.json"
    case maximumtemp_England = "/Tmax-England.json"
    
    case rainfall_UK = "/Rainfall-UK.json"
    case minimumtemp_UK = "/Tmin-UK.json"
    case maximumtemp_UK = "/Tmax-UK.json"

    case rainfall_Scotland = "/Rainfall-Scotland.json"
    case minimumtemp_Scotland = "/Tmin-Scotland.json"
    case maximumtemp_Scotland = "/Tmax-Scotland.json"

    case rainfall_Wales = "/Rainfall-Wales.json"
    case minimumtemp_Wales = "/Tmin-Wales.json"
    case maximumtemp_Wales = "/Tmax-Wales.json"

}


class WeatherDataDisplayViewController: UIViewController, WeatherDataDisplayProtocol {
    //var interactor : WeatherDataDisplayInteractorProtocol?
    var presenter : WeatherDataDisplayPresentationProtocol?
    @IBOutlet weak var tblHeightConstant: NSLayoutConstraint!
    @IBOutlet weak var tblWeatherData: UITableView!
    @IBOutlet weak var tblHeader: UIView!
    
    
    // MARK: Object lifecycle
    
    override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?) {
        super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
        setup()
    }
    
    required init?(coder aDecoder: NSCoder) {
        super.init(coder: aDecoder)
        setup()
    }
    
    // MARK: Setup
    
    private func setup() {
        let viewController = self
        let interactor = WeatherDataDisplayInteractor()
        let presenter = WeatherDataDisplayPresenter()
        
        //View Controller will communicate with only presenter
        viewController.presenter = presenter
        //viewController.interactor = interactor
        
        //Presenter will communicate with Interector and Viewcontroller
        presenter.viewController = viewController
        presenter.interactor = interactor
        
        //Interactor will communucate with only presenter.
        interactor.presenter = presenter
    }
    
    
    // MARK: View lifecycle
    
    override func viewDidLoad() {
        super.viewDidLoad()
        self.presenter?.callWeatherApi(urlString: WeatherCategory.rainfall_England.rawValue)
        setupUI()
       
    }
    
    override func viewDidLayoutSubviews() {
        self.tblHeightConstant.constant = self.tblWeatherData.contentSize.height
    }

    
    //@IBOutlet weak var nameTextField: UITextField!
   
    func setupUI() {
       self.tblHeader.setCornerRadius(radius: self.tblHeader.frame.height / 2.0)
       self.tblHeader.dropShadow(offset: CGSize(width: 1, height: 1), radius: 20, color: UIColor.black, opacity: 0.5)
    }
    
    func displayAlert(strTitle : String, strMessage : String) {
        //nameTextField.text = viewModel.name
        print("Disp Done")
    }
    
    func displayResponse(mdlResponse: [ResponseModel]) {
        print(mdlResponse)
    }
}
extension WeatherDataDisplayViewController : UITableViewDataSource{
    
    func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
        return 50
    }
    
    func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {
        let cell = tableView.dequeueReusableCell(withIdentifier: "WeatherCell", for: indexPath)
        
        // set the text from the data model
        cell.textLabel?.text = "anmals"
        
        return cell

    }
}
extension WeatherDataDisplayViewController : UITableViewDelegate{
    
    func tableView(_ tableView: UITableView, didSelectRowAt indexPath: IndexPath) {
        
    }
    
    func tableView(_ tableView: UITableView, heightForRowAt indexPath: IndexPath) -> CGFloat {
        return 80
    }
}

